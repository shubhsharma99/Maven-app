name: Maven CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 11 to build the project
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Step 3: Build the project using Maven
      - name: Build with Maven
        run: mvn clean package
        working-directory: ./my-app

      # Step 4: Run tests with Maven
      - name: Run tests with Maven
        run: mvn test
        working-directory: ./my-app

      # Step 5: Debug the project structure to find target directory
      - name: Debug project structure
        run: find . -type d  # This lists all directories to help locate 'target' folder

      # Step 6: List the files in the target directory
      # We are using './my-app/target/' to ensure we are accessing the correct path
      - name: List target directory files
        run: ls -al ./my-app/target/

      # Step 7: Upload the built JAR file as an artifact
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-app-jar
          path: ./my-app/target/my-app-1.0-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 8: Download the JAR artifact from the previous build
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: my-app-jar

      # Step 9: Create a temporary directory on the GitHub runner and copy the JAR file
      - name: Create temporary directory and copy JAR file
        run: |
          mkdir -p /tmp/my-app
          cp ./my-app/target/my-app-1.0-SNAPSHOT.jar /tmp/my-app/
          ls -al /tmp/my-app/

      # Step 10: Deploy the JAR file to EC2 via SSM
      - name: Deploy JAR to EC2 via SSM
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          INSTANCE_ID: i-0839a8d070763f097
        run: |
          DEPLOY_COMMAND=$(cat <<-EOF
          sudo mkdir -p /opt/my-app
          sudo cp /tmp/my-app/my-app-1.0-SNAPSHOT.jar /opt/my-app/
          sudo systemctl restart my-app
          EOF
          )
          
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["'${DEPLOY_COMMAND}'"]' \
            --comment "Deploying Maven application to EC2 instance"
